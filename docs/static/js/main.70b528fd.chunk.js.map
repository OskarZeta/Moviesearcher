{"version":3,"sources":["Redux/actions/has_error.js","Redux/actions/is_loading.js","Redux/actions/movie_list/fetch_movies_default.js","Redux/actions/movie_list/fetch_movies_sorted.js","Redux/actions/movie_list/fetch_movies_searched.js","Redux/actions/movie_info/fetch_movie_credits.js","Redux/actions/movie_info/fetch_movie_details.js","Redux/actions/movie_info/fetch_movie_images.js","Redux/actions/movie_info/fetch_movie_similars.js","Redux/actions/fetch_settings.js","Redux/actions/fetch_genres.js","Redux/actions/change_favorites.js","Redux/reducers/rootReducer.js","Redux/reducers/movieList.js","Redux/reducers/movieCredits.js","Redux/reducers/movieDetails.js","Redux/reducers/movieImages.js","Redux/reducers/movieSimilars.js","Redux/reducers/settings.js","Redux/reducers/genreList.js","Redux/reducers/favorites.js","Redux/reducers/error.js","Redux/reducers/loading.js","Components/Search.js","Components/Genre.js","Components/Sort.js","Components/Spinner.js","Containers/Sidebar.js","Components/Header/Header.js","Components/Header/HeaderMovie.js","Components/Header/HeaderMovieDetails.js","Components/Header/HeaderFavorites.js","Components/PageBtn.js","Containers/FaveBtn.js","Components/Movie/Movie.js","Components/Movie/MovieSimilar.js","Containers/MovieList/WithMovieList.js","Containers/MovieList/MovieList.js","Containers/MovieList/MovieListSorted.js","Containers/MovieList/MovieListSearched.js","Containers/MovieList/MovieListFavorites.js","Components/ShowLink.js","Components/ImagePreload.js","Containers/MovieInfo/GalleryPreviewImage.js","Containers/MovieInfo/GalleryPreview.js","Containers/ImageShow.js","Containers/MovieInfo/Poster.js","Components/Article.js","Containers/MovieInfo/SimilarMovies.js","Containers/MovieInfo/CastPreview.js","Containers/MovieInfo/MovieInfo.js","Containers/Gallery.js","Containers/Cast.js","Components/ErrorPage.js","Containers/App.js","Containers/ErrorHandler.js","index.js","Redux/store.js"],"names":["ERROR_SET","ERROR_CLEAR","errorSet","text","type","errorText","LOADING_START","LOADING_STOP","loadingStart","loadingStop","FETCH_MOVIES_DEFAULT","urlPolular","concat","FETCH_MOVIES_SORTED","urlSorted","urlSorted2","FETCH_MOVIES_SEARCHED","urlSearch1","urlSearch2","FETCH_MOVIE_CREDITS","urlCredits1","urlCredits2","fetchMovieCredits","id","dispatch","axios","get","then","response","data","movieCredits","catch","error","FETCH_MOVIE_DETAILS","urlDetails1","urlDetails2","FETCH_MOVIE_IMAGES","urlImages1","urlImages2","fetchMovieImages","movieImages","FETCH_MOVIE_SIMILARS","urlSimilars1","urlSimilars2","fetchMovieSimilars","movieSimilars","LOAD_SETTINGS","apiKey","settingsLoad","settings","FETCH_GENRES","urlGenres","ADD_FAVORITE","REMOVE_FAVORITE","LOAD_FAVORIES","rootReducer","combineReducers","movieList","state","arguments","length","undefined","action","Object","assign","movieDetails","genreList","favorites","movie","filter","fave","parsed","JSON","parse","localStorage","getItem","isError","loading","withRouter","_ref","history","query","searchRequest","e","target","value","trim","push","react_default","a","createElement","className","autoFocus","defaultValue","q","onChange","placeholder","queryString","require","check","name","checkHandler","url","genres","checked","genresArray","split","toString","join","genreId","keys","decodeURIComponent","stringify","defaultChecked","title","direction","clickHandler","onClick","Spinner","Sidebar","this","props","fetchGenres","param","indexOf","_this","map","genre","Components_Genre","key","checkRadioBtn","_this$props","Components_Spinner","makeGenreList","Components_Sort","Component","mapDispatchToProps","json","selected","console","log","connect","clickOptions","document","querySelector","classList","toggle","Header","Link","to","Containers_Sidebar","Components_Search","HeaderMovie","HeaderMovieDetails","HeaderFavorites","page","makePageAndText","newPage","location","pathname","FaveBtn","isFavorite","removeFavorite","addFavorite","poster_path","poster","_this2","some","fav","prevProps","setItem","moviePage","isFav","classSelector","Fragment","xmlns","viewBox","d","Movie","addressMobile","secure_base_url","poster_sizes","addressTablet","addressDesktop","srcSet","media","src","alt","Containers_FaveBtn","MovieSimilar","WithMovieList","MovieListComponent","_Component","_class2","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","makeList","list","trigger","limiter","results","_","i","params","images","Components_Movie_Movie","Movie_MovieSimilar","inherits","createClass","MovieList","fetchFunction","Number","isNaN","Components_PageBtn","MovieListSorted","_this$props2","_this$props3","sortBy","MovieListSearched","MovieListFavorites","ShowLink","ImagePreload","GalleryPreviewImage","isLoaded","loadImage","setState","index","onLoad","Components_ImagePreload","GalleryPreview","backdrops","style","border","margin","image","file_path","MovieInfo_GalleryPreviewImage","Components_ShowLink","loadImages","ImageShow","from","dir","_this3","imageIndex","source","_this4","_makeAddress","n","backdrop_sizes","sliderClick","closeClick","Poster","loadPoster","objectSpread","vote_average","ratings","background","makeAddress","Article","children","SimilarMovies","movies","total_results","CastPreview","cast","crew","person","job","character","loadCast","MovieInfo","fetchMovieDetails","prewProps","_this$props$movieDeta","release_date","original_title","tagline","overview","budget","vote_count","popularity","original_language","na","Containers_ImageShow","MovieInfo_Poster","MovieInfo_GalleryPreview","Components_Article","MovieInfo_CastPreview","MovieInfo_SimilarMovies","Gallery","path","Cast","ErrorPage","href","App","fetchSettings","cookie","searchQuery","getSettings","Switch","Route","exact","render","Components_Header_Header","Containers_MovieList_MovieList","makeQueryAndPage","search","MovieList_MovieListSorted","MovieList_MovieListSearched","Header_HeaderMovieDetails","match","Containers_Gallery","Containers_Cast","Header_HeaderMovie","Containers_MovieInfo_MovieInfo","Header_HeaderFavorites","MovieList_MovieListFavorites","component","settingsFromCookie","date","Date","setDate","getDate","toUTCString","ErrorHandler","errorClear","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","Containers_ErrorHandler","BrowserRouter","basename","process","Containers_App","getElementById"],"mappings":"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","file":"static/js/main.70b528fd.chunk.js","sourcesContent":["export const ERROR_SET = 'ERROR_SET';\nexport const ERROR_CLEAR = 'ERROR_CLEAR';\n\nexport function errorSet(text){\n  return {\n    type: ERROR_SET,\n    errorText: text\n  }\n}\n\nexport function errorClear(){\n  return {\n    type: ERROR_CLEAR\n  }\n}","export const LOADING_START = 'LOADING_START';\nexport const LOADING_STOP = 'LOADING_STOP';\n\nexport function loadingStart(){\n  return {\n    type: LOADING_START\n  }\n}\n\nexport function loadingStop(){\n  return {\n    type: LOADING_STOP\n  }\n}","import axios from 'axios';\nimport { errorSet } from '../has_error';\nimport { loadingStart, loadingStop } from '../is_loading';\n\nexport const FETCH_MOVIES_DEFAULT = 'FETCH_MOVIES_DEFAULT';\n\nconst apiKey = '8282c68f5ed8f63c5bfae413614846d5';\nconst urlPolular = `https://api.themoviedb.org/3/movie/popular?language=en-US&api_key=${apiKey}&page=`;\n\nfunction moviesLoadDefault(data) {\n  return {\n    type: FETCH_MOVIES_DEFAULT,\n    movieList: data ? data.results : []\n  }\n}\n\nexport function fetchMoviesDefault(page) {\n  return dispatch => {\n    dispatch(loadingStart());\n    return axios.get(urlPolular + page)\n      .then(response => {\n        dispatch(moviesLoadDefault(response.data));\n        dispatch(loadingStop());\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch(errorSet(\"Error while retrieving list of popular movies from server.\"));\n      })\n  }\n}\n","import axios from 'axios';\nimport { errorSet } from '../has_error';\nimport { loadingStart, loadingStop } from '../is_loading';\n\nexport const FETCH_MOVIES_SORTED = 'FETCH_MOVIES_SORTED';\n\nconst apiKey = '8282c68f5ed8f63c5bfae413614846d5';\nconst urlSorted = `https://api.themoviedb.org/3/discover/movie?`;\nconst urlSorted2 = `&api_key=${apiKey}&page=`;\n\nfunction moviesLoadSorted(data) {\n  return {\n    type: FETCH_MOVIES_SORTED,\n    movieList: data ? data.results : []\n  }\n}\n\nexport function fetchMoviesSorted(page, sortBy, direction, genresArray) {\n  return dispatch => {\n    dispatch(loadingStart());\n    let url = urlSorted;\n    if (sortBy && direction) {\n      url = url + 'sort_by=' + sortBy + '.' + direction;\n    }\n    if (genresArray){\n      if (sortBy && direction) {\n        url = url + `&with_genres=${genresArray.toString()}`;\n      } else {\n        url = url + `with_genres=${genresArray.toString()}`;\n      }\n    }\n    url = url + urlSorted2;\n    return axios.get(url + page)\n      .then(response => {\n        dispatch(moviesLoadSorted(response.data));\n        dispatch(loadingStop());\n      })\n      .catch(error => {\n        dispatch(errorSet(error));\n      })\n  }\n}\n","import axios from 'axios';\n\nimport { errorSet } from '../has_error';\nimport { loadingStart, loadingStop } from '../is_loading';\n\nconst apiKey = '8282c68f5ed8f63c5bfae413614846d5';\n\nexport const FETCH_MOVIES_SEARCHED = 'FETCH_MOVIES_SEARCHED';\n\nconst urlSearch1 = `https://api.themoviedb.org/3/search/movie?query=`;\nconst urlSearch2 = `&api_key=${apiKey}&page=`;\n\nfunction moviesLoadSorted(data) {\n  return {\n    type: FETCH_MOVIES_SEARCHED,\n    movieList: data ? data.results : []\n  }\n}\n\nexport function fetchMoviesSearched(page, query) {\n  return dispatch => {\n    dispatch(loadingStart());\n    return axios.get(urlSearch1 + query + urlSearch2 + page)\n      .then(response => {\n        dispatch(moviesLoadSorted(response.data));\n        dispatch(loadingStop());\n      })\n      .catch(error => {\n        dispatch(errorSet(error));\n      })\n  }\n}\n","import axios from 'axios';\nimport { errorSet } from '../has_error';\n\nconst apiKey = '8282c68f5ed8f63c5bfae413614846d5';\n\nexport const FETCH_MOVIE_CREDITS = 'FETCH_MOVIE_CREDITS';\n\nconst urlCredits1 = `https://api.themoviedb.org/3/movie/`;\nconst urlCredits2 = `/credits?api_key=${apiKey}`;\n\nfunction movieLoadCredits(data) {\n  return {\n    type: FETCH_MOVIE_CREDITS,\n    movieCredits: data\n  }\n}\n\nexport function fetchMovieCredits(id) {\n  return dispatch =>\n    axios.get(urlCredits1 + id + urlCredits2)\n      .then(response => {\n        dispatch(movieLoadCredits(response.data));\n      })\n      .catch(error => {\n        dispatch(errorSet(\n          \"An error has occurred during the call to tmdb API. \" +\n          \"Check your address bar (you've probably entered wrong film ID) \" +\n          \"or try contacting tmdb's tech support.\"\n        ));\n      })\n}\n","import axios from 'axios';\nimport { errorSet } from '../has_error';\nimport { loadingStart, loadingStop } from '../is_loading';\n\nexport const FETCH_MOVIE_DETAILS = 'FETCH_MOVIE_DETAILS';\n\nconst apiKey = '8282c68f5ed8f63c5bfae413614846d5';\nconst urlDetails1 = `https://api.themoviedb.org/3/movie/`;\nconst urlDetails2 = `?api_key=${apiKey}&language=en-US`;\n\nfunction movieLoadDetails(data) {\n  return {\n    type: FETCH_MOVIE_DETAILS,\n    movieDetails: data\n  }\n}\n\nexport function fetchMovieDetails(id) {\n  return dispatch => {\n    dispatch(loadingStart());\n    return axios.get(urlDetails1 + id + urlDetails2)\n      .then(response => {\n        dispatch(movieLoadDetails(response.data));\n        dispatch(loadingStop());\n      })\n      .catch(error => {\n        dispatch(errorSet(\n          \"An error has occurred during the call to tmdb API. \" +\n          \"Check your address bar (you've probably entered wrong film ID) \" +\n          \"or try contacting tmdb's tech support.\"\n        ));\n      });\n  }\n}\n","import axios from 'axios';\nimport { errorSet } from '../has_error';\n\nconst apiKey = '8282c68f5ed8f63c5bfae413614846d5';\n\nexport const FETCH_MOVIE_IMAGES = 'FETCH_MOVIE_IMAGES';\n\nconst urlImages1 = `https://api.themoviedb.org/3/movie/`;\nconst urlImages2 = `/images?api_key=${apiKey}`;\n\nfunction movieLoadImages(data) {\n  return {\n    type: FETCH_MOVIE_IMAGES,\n    movieImages: data\n  }\n}\n\nexport function fetchMovieImages(id) {\n  return dispatch =>\n    axios.get(urlImages1 + id + urlImages2)\n      .then(response => {\n        dispatch(movieLoadImages(response.data));\n      })\n      .catch(error => {\n        dispatch(errorSet(\n          \"An error has occurred during the call to tmdb API. \" +\n          \"Check your address bar (you've probably entered wrong film ID) \" +\n          \"or try contacting tmdb's tech support.\"\n        ));\n      })\n}\n","import axios from 'axios';\nimport { errorSet } from '../has_error';\n\nconst apiKey = '8282c68f5ed8f63c5bfae413614846d5';\n\nexport const FETCH_MOVIE_SIMILARS = 'FETCH_MOVIE_SIMILARS';\n\nconst urlSimilars1 = `https://api.themoviedb.org/3/movie/`;\nconst urlSimilars2 = `/similar?api_key=${apiKey}&language=en-US&page=1`;\n\nfunction movieLoadSimilars(data) {\n  return {\n    type: FETCH_MOVIE_SIMILARS,\n    movieSimilars: data\n  }\n}\n\nexport function fetchMovieSimilars(id) {\n  return dispatch =>\n    axios.get(urlSimilars1 + id + urlSimilars2)\n      .then(response => {\n        dispatch(movieLoadSimilars(response.data));\n      })\n      .catch(error => {\n        dispatch(errorSet(\n          \"An error has occurred during the call to tmdb API. \" +\n          \"Check your address bar (you've probably entered wrong film ID) \" +\n          \"or try contacting tmdb's tech support.\"\n        ));\n      })\n}\n","import axios from 'axios';\nimport { errorSet } from './has_error';\n\nexport const LOAD_SETTINGS = 'LOAD_SETTINGS';\n\nconst apiKey = '8282c68f5ed8f63c5bfae413614846d5';\n\nfunction settingsLoad(data) {\n  return {\n    type: LOAD_SETTINGS,\n    settings: data\n  }\n}\n\nexport function fetchSettings(settingsFromCookie) {\n  return dispatch => {\n    if (!settingsFromCookie) {\n      return axios.get(`https://api.themoviedb.org/3/configuration?api_key=${apiKey}`)\n        .then(response => {\n          dispatch(settingsLoad(response.data));\n          let date = new Date();\n          date.setDate(date.getDate() + 3);\n          document.cookie = `settings=${JSON.stringify(response.data)} path=/; expires=${date.toUTCString()}`;\n        })\n        .catch(error => {\n          dispatch(errorSet(\"Error while loading settings from server.\"));\n        })\n    } else {\n      dispatch(settingsLoad(settingsFromCookie));\n    }\n  }\n}\n","import axios from 'axios';\nimport { errorSet } from './has_error';\n\nexport const FETCH_GENRES = 'FETCH_GENRES';\n\nconst apiKey = '8282c68f5ed8f63c5bfae413614846d5';\nconst urlGenres = `https://api.themoviedb.org/3/genre/movie/list?language=en-US&api_key=${apiKey}`;\n\nfunction loadGenres(json) {\n  return {\n    type: FETCH_GENRES,\n    genreList: json\n  }\n}\n\nexport function fetchGenres() {\n  return (dispatch => {\n    return axios.get(urlGenres)\n      .then(response => {\n        dispatch(loadGenres(response.data.genres));\n        return response.data.genres.map(genre => \n          Object.assign(genre, {\n            selected: false\n          })\n        );\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch(errorSet(\"Error while retrieving list of genres from server.\"));\n      });\n  });\n}\n","export const ADD_FAVORITE = 'ADD_FAVORITE';\nexport const REMOVE_FAVORITE = 'REMOVE_FAVORITE';\nexport const LOAD_FAVORIES = 'LOAD_FAVORIES';\n\nexport function addFavorite(movie) {\n  return{\n    type: ADD_FAVORITE,\n    movie: movie\n  }\n}\nexport function removeFavorite(id) {\n  return{\n    type: REMOVE_FAVORITE,\n    id: id\n  }\n}\nexport function loadFavorites() {\n  return{\n    type: LOAD_FAVORIES\n  }\n}","import { combineReducers } from 'redux';\nimport {movieList} from './movieList';\nimport {movieCredits} from './movieCredits';\nimport {movieDetails} from './movieDetails';\nimport {movieImages} from './movieImages';\nimport {movieSimilars} from './movieSimilars';\nimport {settings} from './settings';\nimport {genreList} from './genreList';\nimport {favorites} from './favorites';\nimport {error} from './error';\nimport {loading} from './loading';\n\nconst rootReducer = combineReducers({\n  movieList,\n  movieCredits,\n  movieDetails,\n  movieImages,\n  movieSimilars,\n  settings,\n  genreList,\n  favorites,\n  error,\n  loading\n});\n\nexport default rootReducer;","import {FETCH_MOVIES_DEFAULT} from '../actions/movie_list/fetch_movies_default';\nimport {FETCH_MOVIES_SORTED} from '../actions/movie_list/fetch_movies_sorted';\nimport {FETCH_MOVIES_SEARCHED} from '../actions/movie_list/fetch_movies_searched';\n\nexport function movieList(state=[], action) {\n  switch (action.type) {\n    case FETCH_MOVIES_DEFAULT: {\n      return action.movieList;\n    }\n    case FETCH_MOVIES_SORTED: {\n      return action.movieList;\n    }\n    case FETCH_MOVIES_SEARCHED: {\n      return action.movieList;\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {FETCH_MOVIE_CREDITS} from '../actions/movie_info/fetch_movie_credits';\n\nexport function movieCredits(state = {}, action) {\n  switch (action.type) {\n    case FETCH_MOVIE_CREDITS: {\n      return Object.assign({}, action.movieCredits);\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {FETCH_MOVIE_DETAILS} from '../actions/movie_info/fetch_movie_details';\n\nexport function movieDetails(state = {}, action) {\n  switch (action.type) {\n    case FETCH_MOVIE_DETAILS: {\n      return Object.assign({}, action.movieDetails);\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {FETCH_MOVIE_IMAGES} from '../actions/movie_info/fetch_movie_images';\n\nexport function movieImages(state = {}, action) {\n  switch (action.type) {\n    case FETCH_MOVIE_IMAGES: {\n      return Object.assign({}, action.movieImages);\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {FETCH_MOVIE_SIMILARS} from '../actions/movie_info/fetch_movie_similars';\n\nexport function movieSimilars(state = {}, action) {\n  switch (action.type) {\n    case FETCH_MOVIE_SIMILARS: {\n      return Object.assign({}, action.movieSimilars);\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {LOAD_SETTINGS} from '../actions/fetch_settings';\n\nexport function settings(state={}, action) {\n  switch (action.type) {\n    case LOAD_SETTINGS: {\n      return action.settings;\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {FETCH_GENRES} from '../actions/fetch_genres';\n\nexport function genreList(state=[], action) {\n  switch (action.type) {\n    case FETCH_GENRES: {\n      return action.genreList;\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {ADD_FAVORITE, REMOVE_FAVORITE, LOAD_FAVORIES} from '../actions/change_favorites';\n\nexport function favorites(state = [], action) {\n  switch (action.type) {\n    case ADD_FAVORITE: {\n      return state.concat(action.movie);\n    }\n    case REMOVE_FAVORITE: {\n      return state.filter(fave =>\n        fave.id !== action.id\n      );\n    }\n    case LOAD_FAVORIES: {\n      let parsed = JSON.parse(localStorage.getItem('favorite_movies'));\n      return parsed ? parsed : state;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import {ERROR_SET, ERROR_CLEAR} from '../actions/has_error';\n\nexport function error(state = {isError: false, errorText: \"\"}, action) {\n  switch (action.type) {\n    case ERROR_SET: {\n      return {isError: true, errorText: action.errorText};\n    }\n    case ERROR_CLEAR: {\n      return {isError: false, errorText: \"\"}\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {LOADING_START, LOADING_STOP} from '../actions/is_loading';\n\nexport function loading(state = false, action) {\n  switch (action.type) {\n    case LOADING_START: {\n      return true;\n    }\n    case LOADING_STOP: {\n      return false\n    }\n    default: {\n      return state;\n    }\n  }\n}","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nconst Search = ({ history, query }) => {\n  const searchRequest = e => {\n    let query = e.target.value.trim();\n    if (query.length > 0) {\n      history.push(`/search?q=${query}`);\n    } else {\n      history.push(`/`);\n    }\n  }\n  return (\n    <div className=\"Header__search-input-wrapper\">\n      {query &&\n        <input\n          type=\"search\"\n          autoFocus={!!query}\n          defaultValue={query.q}\n          onChange={searchRequest} placeholder=\"Search...\"\n        />\n      }\n      {!query &&\n        <input\n          type=\"search\"\n          autoFocus={!!query}\n          onChange={searchRequest} placeholder=\"Search...\"\n        />\n      }\n    </div>\n  );\n}\n\nexport default withRouter(Search);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nconst queryString = require('query-string');\n\nconst Genre = ({ query, id, check, name, history }) => {\n  const checkHandler = e => {\n    let url;\n    if (query) {\n      let genres = query.genres;\n      url = Object.assign({}, query);\n      if (e.target.checked) {\n        if (!genres) {\n          url.genres = id.toString();\n        } else {\n          let genresArray = url.genres.split(',');\n          url.genres = genresArray.concat(id.toString()).join();\n        }\n      } else {\n        let genresArray = url.genres.split(',');\n        url.genres = genresArray.filter((genreId) =>\n          genreId !== id.toString()\n        ).join();\n        if (Object.keys(url.genres).length === 0) {\n          delete url.genres;\n        }\n      }\n    } else {\n      url = { genres: id.toString() };\n    }\n    if (Object.keys(url).length !== 0) {\n      history.push(`/sort_by?${decodeURIComponent(queryString.stringify(url))}`);\n    } else {\n      history.push(`/`);\n    }\n  }\n  return (\n    <label className=\"Sidebar__genre-label\">\n      <div className=\"Sidebar__genre-checkbox\">\n        {check &&\n          <input className=\"Sidebar__genre-input\" type=\"checkbox\" name=\"tag\" defaultChecked={true} onChange={(e) => {checkHandler(e)}}/>\n        }\n        {!check &&\n          <input className=\"Sidebar__genre-input\" type=\"checkbox\" name=\"tag\" onChange={(e) => {checkHandler(e)}}/>\n        }\n        <span className=\"Sidebar__genre-custom\"></span>\n      </div>\n      <span className=\"Sidebar__genre-name\">{name}</span>\n    </label>\n  );\n}\n\nexport default withRouter(Genre);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nconst queryString = require('query-string');\n\nconst Sort = ({ name, query, value, history, defaultChecked, title, direction }) => {\n  const clickHandler = e => {\n    let url;\n    if (name === 'sort') {\n      if (query) {\n        if (!query.direction) {\n          url = Object.assign({}, query, { value, direction: \"desc\" });\n        } else {\n          url = Object.assign({}, query);\n        }\n      } else {\n        url = { direction: \"desc\" };\n      }\n      url.value = value;\n    } else if (name === 'direction') {\n      if (query) {\n        if (!query.value) {\n          url = Object.assign({}, query, { value: \"popularity\", direction });\n        }\n        url = Object.assign({}, query);\n      } else {\n        url = { value: \"popularity\" };\n      }\n      url.direction = value;\n    }\n    history.push(`/sort_by?${decodeURIComponent(queryString.stringify(url))}`);\n  }\n  return(\n    <label className={defaultChecked ? 'Sidebar__sort-label Sidebar__sort-label--active' : 'Sidebar__sort-label'}>\n      {defaultChecked &&\n        <div className=\"Sidebar__sort-radiobtn Sidebar__sort-radiobtn--active\">\n          <input className=\"Sidebar__sort-input\" type=\"radio\" name={name} value={value} onClick={clickHandler} defaultChecked/>\n          <span className=\"Sidebar__sort-custom\"></span>\n        </div>\n      }\n      {!defaultChecked &&\n        <div className=\"Sidebar__sort-radiobtn\">\n          <input className=\"Sidebar__sort-input\" type=\"radio\" name={name} value={value} onClick={clickHandler} />\n          <span className=\"Sidebar__sort-custom\"></span>\n        </div>\n      }\n      <span className=\"Sidebar__sort-name\">{title}</span>\n    </label>\n  );\n}\n\nexport default withRouter(Sort);\n","import React from 'react';\n\nconst Spinner = () =>\n  <div className=\"lds-ring\">\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchGenres } from '../Redux/actions/fetch_genres';\nimport Genre from '../Components/Genre';\nimport Sort from '../Components/Sort';\nimport Spinner from '../Components/Spinner';\n\nclass Sidebar extends Component {\n  componentDidMount() {\n    this.props.fetchGenres();\n  }\n  checkRadioBtn(param) {\n    if (this.props.query) {\n      const query = this.props.query;\n      if ((query.value && query.value === param) || (query.direction && query.direction === param)) {\n        return true;\n      }\n      if (query.genres) {\n        let genres = query.genres.split(',');\n        if (genres.indexOf(param.toString()) !== -1) {\n          return true;\n        }\n      }\n    }\n  }\n  makeGenreList() {\n    let list = this.props.genreList;\n    return list.map(genre =>\n      <Genre\n        key={genre.id} id={genre.id} name={genre.name}\n        query={this.props.query} history={this.props.history}\n        check={this.checkRadioBtn(genre.id)}\n      />\n    );\n  }\n  render() {\n    const { query, genreList, history } = this.props;\n    return(\n      <div className={query ? 'Sidebar' : 'Sidebar hidden'}>\n        {genreList.length === 0 && <Spinner/>}\n        {genreList.length !== 0 &&\n          <div className=\"Sidebar__wrapper\">\n            <div className=\"Sidebar__genreList\">\n              <h2 className=\"Sidebar__header\">\n                <span className=\"Sidebar__header-text\">Select genres:</span>\n              </h2>\n              <div className=\"Sidebar__genreList-wrapper\">{this.makeGenreList()}</div>\n            </div>\n            <div className=\"Sidebar__sort-params\">\n              <div className=\"Sidebar__sort\">\n                <h2 className=\"Sidebar__header\">\n                  <span className=\"Sidebar__header-text\">Sort movies by:</span>\n                </h2>\n                <div className=\"Sidebar__sort-wrapper\">\n                  <Sort\n                    name=\"sort\" title=\"Popularity\" value=\"popularity\"\n                    query={query} history={history}\n                    defaultChecked={query ? query.value ? this.checkRadioBtn(\"popularity\") : true : true}\n                  />\n                  <Sort\n                    name=\"sort\" title=\"Average votes\" value=\"vote_average\"\n                    query={query} history={history}\n                    defaultChecked={this.checkRadioBtn(\"vote_average\")}\n                  />\n                  <Sort\n                    name=\"sort\" title=\"Number of votes\" value=\"vote_count\"\n                    query={query} history={history}\n                    defaultChecked={this.checkRadioBtn(\"vote_count\")}\n                  />\n                  <Sort\n                    name=\"sort\" title=\"Original title\" value=\"original_title\"\n                    query={query} history={history}\n                    defaultChecked={this.checkRadioBtn(\"original_title\")}\n                  />\n                  <Sort\n                    name=\"sort\" title=\"Release date\" value=\"release_date\"\n                    query={query} history={history}\n                    defaultChecked={this.checkRadioBtn(\"release_date\")}\n                  />\n                </div>\n              </div>\n              <div className=\"Sidebar__sort\">\n                <h2 className=\"Sidebar__header\">\n                  <span className=\"Sidebar__header-text\">Sorting direction:</span>\n                </h2>\n                <div className=\"Sidebar__sort-wrapper Sidebar__sort-wrapper--direction\">\n                  <Sort\n                    name=\"direction\" title=\"Descending\" value=\"desc\"\n                    query={query} history={history}\n                    defaultChecked={query ? query.value ? this.checkRadioBtn(\"desc\") : true : true}\n                  />\n                  <Sort\n                    name=\"direction\" title=\"Ascending\" value=\"asc\"\n                    query={query} history={history}\n                    defaultChecked={this.checkRadioBtn(\"asc\")}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    genreList: state.genreList,\n    error: state.error\n  }\n};\n\nconst mapDispatchToProps = {\n  fetchGenres\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","import React from 'react';\nimport Search from '../Search';\nimport Sidebar from '../../Containers/Sidebar';\nimport { Link } from 'react-router-dom';\n\nfunction clickOptions(e){\n  let sidebar = document.querySelector('.Sidebar');\n  sidebar.classList.toggle('hidden');\n  let btn = document.querySelector('.Header__options');\n  btn.classList.toggle('Header__btn--active');\n}\n\nconst Header = ({ query }) =>\n  <header className=\"Header\">\n    <div className=\"container container--header\">\n      <h1>\n        <Link className=\"Header__home\" to=\"/\">\n          Moviesearcher App\n        </Link>\n      </h1>\n      <ul className=\"Header__additional\">\n        <li className={`Header__options Header__btn ${query ? !query.q ? 'Header__btn--active' : '' : ''}`} onClick={clickOptions}>\n          <span>Options</span>\n        </li>\n        <li className='Header__sidebar'>\n          <Sidebar query={query ? query.q ? undefined : query : undefined}/>\n        </li>\n        <li className=\"Header__favorites Header__btn\">\n          <Link to=\"/favorites\">\n            <span>Favorites</span>\n          </Link>\n        </li>\n        <li className=\"Header__search\">\n          <Search query={query ? query.q ? query : undefined : undefined}/>\n        </li>\n      </ul>\n    </div>\n  </header>\n\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst HeaderMovie = () =>\n  <header className=\"Header\">\n    <div className=\"container container--header\">\n      <h1>\n        <Link className=\"Header__home\" to=\"/\">\n          Moviesearcher App\n        </Link>\n      </h1>\n      <ul className=\"Header__additional\">\n        <li className=\"Header__favorites Header__favorites--moviePage Header__btn\">\n          <Link to=\"/favorites\">\n            <span>Favorites</span>\n          </Link>\n        </li>\n      </ul>\n    </div>\n  </header>\n\nexport default HeaderMovie;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst HeaderMovieDetails = ({ id }) =>\n  <header className=\"Header\">\n    <div className=\"container container--header\">\n      <h1>\n        <Link className=\"Header__home\" to=\"/\">\n          Moviesearcher App\n        </Link>\n      </h1>\n      <ul className=\"Header__additional\">\n        <li className=\"Header__favorites Header__favorites--movieDetails Header__btn\">\n          <Link to=\"/favorites\">\n            <span>Favorites</span>\n          </Link>\n        </li>\n        <li className=\"Header__back Header__btn\">\n          <Link to={`/filmId/${id}`}>\n            <span>To movie</span>\n          </Link>\n        </li>\n      </ul>\n    </div>\n  </header>\n\nexport default HeaderMovieDetails;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst HeaderFavorites = () =>\n  <header className=\"Header\">\n    <div className=\"container container--header\">\n      <h1>\n        <Link className=\"Header__home\" to=\"/\">\n          Moviesearcher App\n        </Link>\n      </h1>\n      <ul className=\"Header__additional\">\n        <li className=\"Header__favorites Header__btn Header__favorites-nonbtn Header__btn--active\">\n          <span>Favorites</span>\n        </li>\n      </ul>\n    </div>\n  </header>\n\nexport default HeaderFavorites;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst PageBtn = ({ page, direction, query, history }) => {\n  const makePageAndText = () => {\n    let text = '';\n    let newPage = page;\n    if (direction === 'prev') {\n      text = 'Back';\n      if (newPage !== 1) {\n        newPage = newPage - 1;\n      }\n    } else {\n      text = 'Next';\n      newPage = newPage + 1;\n    }\n    return {\n      text: text,\n      page: newPage\n    }\n  }\n  return (\n    <div>\n      <Link\n        className={'Pagination__' + direction}\n        to={\n          `${query ? history.location.pathname + '?' + query + '/' : '/'}${makePageAndText().page}`\n        }\n      >\n        <span>{makePageAndText().text}</span>\n      </Link>\n    </div>\n  );\n}\n\nexport default withRouter(PageBtn);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addFavorite, removeFavorite } from '../Redux/actions/change_favorites';\n\nclass FaveBtn extends Component {\n  isFavorite() {\n    let favorites = this.props.favorites;\n    if (favorites.length) {\n      return favorites.some(fav => fav.id === this.props.id);\n    }\n    return false;\n  }\n  clickHandler = () => {\n    if (!this.isFavorite()) {\n      this.props.addFavorite ({\n        id: this.props.id,\n        title: this.props.name,\n        poster_path: this.props.poster\n      });\n    } else {\n      this.props.removeFavorite(this.props.id);\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.favorites !== prevProps.favorites) {\n      localStorage.setItem('favorite_movies', JSON.stringify(this.props.favorites));\n    }\n  }\n  render(){\n    const moviePage = this.props.moviePage;\n    const isFav = this.isFavorite();\n    const classSelector = {\n      favAndMovie : 'FaveBtn FaveBtn--moviePage FaveBtn--active btn',\n      favAndList : 'FaveBtn FaveBtn--active btn',\n      notFavAndMovie : 'FaveBtn FaveBtn--moviePage btn btn-success',\n      notFavAndList: 'FaveBtn btn btn-success'\n    };\n    return(\n      <>\n        <div className={\n          isFav ?\n            moviePage ? classSelector.favAndMovie : classSelector.favAndList :\n            moviePage ? classSelector.notFavAndMovie : classSelector.notFavAndList\n          }\n          onClick={this.clickHandler}>\n          <div className='FaveBtn__content'>\n            <svg className=\"FaveBtn__img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n              <path\n                className={`FaveBtn__star ${isFav ? 'FaveBtn__star--active' : ''}`}\n                d=\"M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z\"\n              />\n            </svg>\n            <span className=\"FaveBtn__text\">\n              {isFav ? 'Remove from faves' : 'Add to faves'}\n            </span>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    favorites: state.favorites\n  }\n};\n\nconst mapDispatchToProps= {\n  addFavorite,\n  removeFavorite\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FaveBtn);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport FaveBtn from '../../Containers/FaveBtn';\n\nconst Movie = ({ settings, poster, name, id, favorites, isFav }) => {\n  let addressMobile = settings.secure_base_url + settings.poster_sizes[1] + poster;\n  let addressTablet = settings.secure_base_url + settings.poster_sizes[2] + poster;\n  let addressDesktop = settings.secure_base_url + settings.poster_sizes[3] + poster;\n  return (\n    <div className='Movie'>\n      <div className=\"Movie__link\">\n        <Link to={`/filmId/${id}`} >\n          <h2 className=\"Movie__header\">{name}</h2>\n          {poster !== null ?\n            <picture>\n              <source srcSet={addressDesktop} media=\"(min-width: 1300px)\"/>\n              <source srcSet={addressTablet} media=\"(min-width: 800px)\"/>\n              <img src={addressMobile} alt=\"movie-poster\"/>\n            </picture>\n            :\n            <div className=\"Movie__placeholder\">\n              <div className=\"Movie__placeholder-mobile\"></div>\n              <div className=\"Movie__placeholder-tablet\"></div>\n              <div className=\"Movie__placeholder-desktop\"></div>\n            </div>\n          }\n        </Link>\n        <FaveBtn\n          id={id} name={name}\n          poster={poster}\n        />\n      </div>\n    </div>\n  );\n}\n\n\nexport default Movie;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport FaveBtn from '../../Containers/FaveBtn';\n\nconst MovieSimilar = ({ settings, poster, name, id, favorites, isFav }) => {\n  let addressMobile = settings.secure_base_url + settings.poster_sizes[1] + poster;\n  let addressTablet = settings.secure_base_url + settings.poster_sizes[2] + poster;\n  return (\n    <div className='Movie Movie--preview'>\n      <div className=\"Movie__link\">\n        <Link to={`/filmId/${id}`}>\n          <h2 className=\"Movie__header\">{name}</h2>\n          {poster !== null ?\n            <picture>\n              <source srcSet={addressTablet} media=\"(min-width: 800px)\"/>\n              <img src={addressMobile} alt=\"movie-poster\"/>\n            </picture>\n          :\n            <div className=\"Movie__placeholder\">\n              <div className=\"Movie__placeholder-mobile\"></div>\n              <div className=\"Movie__placeholder-tablet Movie__placeholder-tablet--desktop\"></div>\n            </div>\n          }\n        </Link>\n        <FaveBtn\n          id={id} name={name}\n          poster={poster}\n          //isFav={isFav}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default MovieSimilar;\n","import React, { Component } from 'react';\r\nimport Movie from '../../Components/Movie/Movie';\r\nimport MovieSimilar from '../../Components/Movie/MovieSimilar';\r\n\r\nconst WithMovieList = MovieListComponent =>\r\n  class extends Component {\r\n    makeList = type => {\r\n      let list;\r\n      let trigger;\r\n      let limiter;\r\n      if (type === 'favorites') {\r\n        list = this.props.favorites;\r\n        trigger = list.length;\r\n      } else if (type === 'similars') {\r\n        list = this.props.movieSimilars.results;\r\n        trigger = this.props.movieSimilars.results;\r\n        limiter = 10;\r\n      } else {\r\n        list = this.props.movieList;\r\n        trigger = list.length;\r\n      }\r\n      if (trigger) {\r\n        if (limiter) {\r\n          list = list.filter((_, i) => i < limiter);\r\n        }\r\n        return list.map(movie => {\r\n          const params = {\r\n            key: movie.id,\r\n            id : movie.id,\r\n            name : movie.title,\r\n            poster : movie.poster_path,\r\n            settings : this.props.settings.images\r\n          };\r\n          return (type !== 'similars' ?\r\n            <Movie {...params} /> : <MovieSimilar {...params} />\r\n          );\r\n        });\r\n      }\r\n    }\r\n    render() {\r\n      return(\r\n        <MovieListComponent\r\n          makeList = { this.makeList }\r\n          { ...this.props }\r\n        />\r\n      );\r\n    }\r\n}\r\n\r\nexport default WithMovieList;\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport PageBtn from '../../Components/PageBtn';\nimport Spinner from '../../Components/Spinner';\nimport WithMovieList from './WithMovieList';\nimport {\n  fetchMoviesDefault\n} from '../../Redux/actions/movie_list/fetch_movies_default';\n\nclass MovieList extends Component {\n  componentDidMount() {\n    this.props.fetchFunction(\n      Number.isNaN(this.props.page) ? 1 : this.props.page\n    );\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.page !== prevProps.page) {\n      this.props.fetchFunction(\n        Number.isNaN(this.props.page) ? 1 : this.props.page\n      );\n    }\n  }\n  render() {\n    const { movieList, loading, page, makeList } = this.props;\n    return(\n      <div className=\"container container--movielist\">\n        {loading &&\n          <div className=\"container--loading\">\n            <Spinner/>\n          </div>\n        }\n        {!loading && makeList()}\n        {movieList.length !== 0 &&\n          <div className=\"Pagination\">\n            <PageBtn direction=\"prev\" page={page} />\n            <PageBtn direction=\"next\" page={page} />\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    movieList: state.movieList,\n    loading: state.loading\n  }\n};\n\nconst mapDispatchToProps = {\n  fetchFunction: fetchMoviesDefault\n};\n\nexport default connect(\n  mapStateToProps, mapDispatchToProps\n)(WithMovieList(MovieList));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport PageBtn from '../../Components/PageBtn';\nimport Spinner from '../../Components/Spinner';\nimport WithMovieList from './WithMovieList';\nimport {\n  fetchMoviesSorted\n } from '../../Redux/actions/movie_list/fetch_movies_sorted';\n\nconst queryString = require('query-string');\n\nclass MovieListSorted extends Component {\n  componentDidMount() {\n    const { query, page } = this.props;\n    this.props.fetchFunction(page, query.value, query.direction, query.genres);\n  }\n  componentDidUpdate(prevProps) {\n    const { query, page } = this.props;\n    if (page !== prevProps.page ||\n        query.value !== prevProps.query.value ||\n        query.direction !== prevProps.query.direction ||\n        query.genres !== prevProps.query.genres\n      ) {\n      this.props.fetchFunction(page, query.value, query.direction, query.genres);\n    }\n  }\n  render() {\n    const { loading, movieList, query, page } = this.props;\n    return(\n      <div className=\"container container--movielist\">\n        {loading &&\n          <div className=\"container--loading\">\n            <Spinner/>\n          </div>\n        }\n        {!loading && movieList.length !== 0 && this.props.makeList()}\n        {!loading && movieList.length === 0 &&\n          <div className=\"container container--loading\">\n            <span>No movies found!</span>\n          </div>\n        }\n        {movieList.length !== 0 &&\n          <div className=\"Pagination\">\n            <PageBtn\n              direction=\"prev\"\n              query={decodeURIComponent(queryString.stringify(query))}\n              page={page}\n            />\n            <PageBtn\n              direction=\"next\"\n              query={decodeURIComponent(queryString.stringify(query))}\n              page={page}\n            />\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    movieList: state.movieList,\n    loading: state.loading\n  }\n};\nconst mapDispatchToProps = {\n  fetchFunction: fetchMoviesSorted\n};\n\nexport default connect(\n  mapStateToProps, mapDispatchToProps\n)(WithMovieList(MovieListSorted));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport PageBtn from '../../Components/PageBtn';\nimport Spinner from '../../Components/Spinner';\nimport WithMovieList from './WithMovieList';\nimport {\n  fetchMoviesSearched\n } from '../../Redux/actions/movie_list/fetch_movies_searched';\n\nconst queryString = require('query-string');\n\nclass MovieListSearched extends Component {\n  componentDidMount() {\n    this.props.fetchFunction(this.props.page, this.props.query.q);\n  }\n  componentDidUpdate(prevProps) {\n    const { page, query } = this.props;\n    if (page !== prevProps.page || query.q !== prevProps.query.q) {\n      this.props.fetchFunction(page, query.q);\n    }\n  }\n  render() {\n    const { loading, settings, movieList, query, page } = this.props;\n    return(\n      <div className=\"container container--movielist\">\n        {loading &&\n          <div className=\"container--loading\">\n            <Spinner/>\n          </div>\n        }\n        {!loading && Object.keys(settings).length && this.props.makeList()}\n        {movieList.length !== 0 &&\n          <div className=\"Pagination\">\n            <PageBtn\n              direction=\"prev\"\n              query={decodeURIComponent(queryString.stringify(query))}\n              page={page}\n            />\n            <PageBtn\n              direction=\"next\"\n              query={decodeURIComponent(queryString.stringify(query))}\n              page={page}\n            />\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    movieList: state.movieList,\n    loading: state.loading\n  }\n};\nconst mapDispatchToProps = {\n  fetchFunction: fetchMoviesSearched\n};\n\nexport default connect(\n  mapStateToProps, mapDispatchToProps\n)(WithMovieList(MovieListSearched));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  loadFavorites\n} from '../../Redux/actions/change_favorites';\n\nimport WithMovieList from './WithMovieList';\n\nclass MovieListFavorites extends Component {\n  componentDidMount() {\n    if (!this.props.favorites.length) {\n      this.props.fetchFunction();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.favorites !== prevProps.favorites) {\n      localStorage.setItem('favorite_movies', JSON.stringify(this.props.favorites));\n    }\n  }\n  render() {\n    return(\n      <div className=\"container container--movielist\">\n        {this.props.makeList('favorites')}\n        {this.props.favorites.length === 0 &&\n          <span className=\"App__faves-empty\">\n            You don't have any favorites yet!\n          </span>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    favorites: state.favorites\n  }\n};\nconst mapDispatchToProps = {\n  fetchFunction: loadFavorites\n};\n\nexport default connect(\n  mapStateToProps, mapDispatchToProps\n)(WithMovieList(MovieListFavorites));\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ShowLink = ({ id, type }) => {\r\n  return (\r\n    <div className={`MovieInfo__show-link MovieInfo__show-link--${type}`}>\r\n      <Link to={`/filmId/${id}/${type}`}>\r\n        <span>show full {type}</span>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowLink;\r\n","import React from 'react';\r\nimport Spinner from './Spinner';\r\n\r\nconst ImagePreload = ({type}) =>\r\n  <div className={`image-preload image-preload--${type}`}>\r\n    <Spinner/>\r\n  </div>\r\n\r\nexport default ImagePreload;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ImagePreload from '../../Components/ImagePreload';\r\n\r\nclass GalleryPreviewImage extends Component {\r\n  state = {\r\n    isLoaded: false\r\n  }\r\n  loadImage = () => {\r\n    this.setState({\r\n      isLoaded: true\r\n    });\r\n  }\r\n  render() {\r\n    const { index, id, addressMobile, addressTablet, addressDesktop } = this.props;\r\n    return(\r\n      <Link className=\"MovieInfo__image-preview\" to={`/filmId/${id}?image=${index+1}`}>\r\n        <picture>\r\n          <source srcSet={addressDesktop} media=\"(min-width: 1300px)\" />\r\n          <source srcSet={addressTablet} media=\"(min-width: 800px)\" />\r\n          <img className=\"MovieInfo__img\" onLoad={this.loadImage} src={addressMobile} alt=\"movie-poster\"/>\r\n        </picture>\r\n        {!this.state.isLoaded && <ImagePreload type=\"gallery-preview\"/>}\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default GalleryPreviewImage;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchMovieImages } from '../../Redux/actions/movie_info/fetch_movie_images';\r\nimport Spinner from '../../Components/Spinner';\r\nimport ShowLink from '../../Components/ShowLink';\r\nimport GalleryPreviewImage from './GalleryPreviewImage';\r\n\r\nconst imagesToShowPreview = 4;\r\n\r\nclass GalleryPreview extends Component {\r\n  state = {\r\n    isLoaded: false\r\n  }\r\n  loadImages() {\r\n    let images = this.props.movieImages.backdrops;\r\n    if (images) {\r\n      if (!images.length) {\r\n        return(\r\n          <i className=\"MovieInfo__info\" style={{border: 'none', margin: 0}}>\r\n            Not available\r\n          </i>\r\n        );\r\n      }\r\n      images = images.filter((_, i) => i < imagesToShowPreview);\r\n      const { settings, id } = this.props;\r\n      return images.map((image, index) => {\r\n        let addressMobile = settings.secure_base_url + settings.poster_sizes[1] + image.file_path;\r\n        let addressTablet = settings.secure_base_url + settings.poster_sizes[2] + image.file_path;\r\n        let addressDesktop = settings.secure_base_url + settings.poster_sizes[3] + image.file_path;\r\n        return(\r\n          <GalleryPreviewImage\r\n            index={index} key={index} id={id}\r\n            addressMobile={addressMobile}\r\n            addressTablet={addressTablet}\r\n            addressDesktop={addressDesktop}\r\n          />\r\n        );\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchMovieImages(this.props.id);\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.movieImages !== prevProps.movieImages) {\r\n      this.setState({\r\n        isLoaded: true\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    const images = this.props.movieImages.backdrops;\r\n    return(\r\n      <div>\r\n        <h2 className=\"MovieInfo__section-header\">image gallery</h2>\r\n        <div className=\"MovieInfo__info MovieInfo__info--gallery\">\r\n          {images && images.length !== 0 && <ShowLink id={this.props.id} type=\"gallery\"/>}\r\n          {!this.state.isLoaded && <Spinner/>}\r\n          {this.state.isLoaded &&\r\n            <div className=\"MovieInfo__images-wrapper\">{this.loadImages()}</div>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    movieImages: state.movieImages,\r\n  }\r\n};\r\nconst mapDispatchToProps = {\r\n  fetchMovieImages,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GalleryPreview);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ImagePreload from '../Components/ImagePreload';\nimport { errorSet } from '../Redux/actions/has_error';\n\nclass ImageShow extends Component {\n  state = {\n    isLoaded : false\n  }\n  closeClick() {\n    this.setState({\n      isLoaded : false\n    }, () => {\n      if (this.props.from === \"movie\") {\n        this.props.history.push(`/filmId/${this.props.movieImages.id}`);\n      } else if (this.props.from === \"gallery\") {\n        this.props.history.push(`/filmId/${this.props.movieImages.id}/gallery`);\n      }\n    });\n  }\n  sliderClick(dir) {\n    let index = this.props.imageIndex;\n    let source = \"?image=\";\n    if (this.props.from === \"gallery\") {\n      source = \"/gallery?image=\";\n    }\n    if (dir === \"prev\") {\n      if (index > 0) {\n        this.setState({\n          isLoaded: false\n        }, () =>\n          this.props.history.push(`/filmId/${this.props.movieImages.id}${source}${index}`)\n        );\n      }\n    } else if (dir === \"next\") {\n      if (index < this.props.movieImages.backdrops.length - 1) {\n        this.setState({\n          isLoaded: false\n        }, () =>\n          this.props.history.push(`/filmId/${this.props.movieImages.id}${source}${index + 2}`)\n        );\n      }\n    }\n  }\n  loadImage = () => {\n    this.setState({\n      isLoaded: true\n    });\n  }\n  render() {\n    let addressMobile;\n    let addressTablet;\n    let addressDesktop;\n    const { imageIndex, movieImages } = this.props;\n    const settings = this.props.settings.images;\n    function _makeAddress(n) {\n      return settings.secure_base_url +\n      settings.backdrop_sizes[n] +\n      movieImages.backdrops[imageIndex].file_path;\n    }\n    if (Object.keys(movieImages).length) {\n      if (imageIndex >= movieImages.backdrops.length || Number.isNaN(imageIndex)) {\n        this.props.errorSet('Wrong image index detected');\n      } else {\n        addressMobile = _makeAddress(0);\n        addressTablet = _makeAddress(1);\n        addressDesktop = _makeAddress(2);\n      }\n    }\n    return(\n      <div className=\"ImageShow\">\n        <div className=\"container container--imageshow\">\n          <div className=\"ImageShow__image-wrapper\">\n            <picture>\n              <source srcSet={addressDesktop} media=\"(min-width: 1300px)\"/>\n              <source srcSet={addressTablet} media=\"(min-width: 800px)\"/>\n              <img onLoad={this.loadImage} src={addressMobile} alt=\"movie-poster\"/>\n            </picture>\n            {!this.state.isLoaded && <ImagePreload type=\"movie-backdrop\"/>}\n          </div>\n          <div className=\"ImageShow__interface\">\n            <button className=\"ImageShow__prev\" onClick={() => {this.sliderClick(\"prev\")}}></button>\n            <button className=\"ImageShow__close\" onClick={() => {this.closeClick()}}></button>\n            <button className=\"ImageShow__next\" onClick={() => {this.sliderClick(\"next\")}}></button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    movieImages: state.movieImages\n  }\n};\n\nconst mapDispatchToProps = {\n  errorSet\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ImageShow));\n","import React, { Component } from 'react';\r\nimport ImagePreload from '../../Components/ImagePreload';\r\nimport FaveBtn from '../../Containers/FaveBtn';\r\n\r\nclass Poster extends Component {\r\n  state = {\r\n    isLoaded: false\r\n  }\r\n  loadPoster = () => {\r\n    this.setState({\r\n      isLoaded: true\r\n    })\r\n  }\r\n  makeAddress(n){\r\n    return this.props.settings.secure_base_url + this.props.settings.poster_sizes[n] + this.props.poster_path;\r\n  }\r\n  render() {\r\n    const { vote_average, poster_path, id, title } = {...this.props};\r\n    const ratings = {\r\n      high: 'linear-gradient(-45deg, #b4e391 0%, #61c419 50%,#b4e391 100%)',\r\n      medium: 'linear-gradient(-45deg, #fefcea 0%,#f1da36 50%,#fefcea 100%)',\r\n      low: 'linear-gradient(135deg, rgba(243,197,189,1) 0%,rgba(232,108,87,1) 0%,rgba(255,170,170,1) 0%,rgba(255,0,0,1) 50%,rgba(255,170,170,1) 100%)'\r\n    };\r\n    return(\r\n      <>\r\n        <div className=\"MovieInfo__votebox\" style={\r\n          { background:\r\n              vote_average >= 7 ? ratings.high :\r\n              vote_average < 7 && vote_average > 3 ? ratings.medium :\r\n              ratings.low\r\n          }\r\n        }>\r\n          {vote_average.toString().split('.').length > 1 &&\r\n            <div>\r\n              <span className=\"MovieInfo__votebox-1\">{vote_average.toString().split('.')[0] + '.'}</span>\r\n              <span className=\"MovieInfo__votebox-2\">{vote_average.toString().split('.')[1]}</span>\r\n            </div>\r\n          }\r\n          {vote_average.toString().split('.').length <= 1 &&\r\n            <div>\r\n              <span className=\"MovieInfo__votebox-1\">{vote_average.toString().split('.')[0]}</span>\r\n            </div>\r\n          }\r\n        </div>\r\n        {poster_path !== null &&\r\n          <div className=\"MovieInfo__poster-wrapper\">\r\n            <picture>\r\n              <source srcSet={this.makeAddress(4)} media=\"(min-width: 1300px)\"/>\r\n              <source srcSet={this.makeAddress(3)} media=\"(min-width: 800px)\"/>\r\n              <img\r\n                className=\"MovieInfo__poster\"\r\n                onLoad={this.loadPoster}\r\n                src={this.makeAddress(3)}\r\n                alt=\"movie-poster\"\r\n              />\r\n            </picture>\r\n            {!this.state.isLoaded && <ImagePreload type=\"movie-poster\"/>}\r\n          </div>\r\n        }\r\n        {poster_path === null &&\r\n          <div className=\"MovieInfo__poster-wrapper\">\r\n            <div className=\"MovieInfo__placeholder\">\r\n              <div className=\"MovieInfo__placeholder-mobile\"></div>\r\n              <div className=\"MovieInfo__placeholder-tablet\"></div>\r\n              <div className=\"MovieInfo__placeholder-desktop\"></div>\r\n            </div>\r\n          </div>\r\n        }\r\n        <FaveBtn id={id} name={title} poster={poster_path} moviePage={true} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Poster;\r\n","import React from 'react';\r\n\r\nconst Article = ({ title, children }) =>\r\n  <>\r\n    <h2 className=\"MovieInfo__section-header\">{title}</h2>\r\n    <p className=\"MovieInfo__info\">{children}</p>\r\n  </>\r\n\r\nexport default Article;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchMovieSimilars } from '../../Redux/actions/movie_info/fetch_movie_similars';\r\nimport Spinner from '../../Components/Spinner';\r\nimport WithMovieList from '../MovieList/WithMovieList';\r\n\r\nclass SimilarMovies extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchMovieSimilars(this.props.id, 1);\r\n  }\r\n  render() {\r\n    const movies = this.props.movieSimilars;\r\n    return(\r\n      <>\r\n        <h2 className=\"MovieInfo__section-header MovieInfo__section-header--similars\">similar movies</h2>\r\n        <div className=\"MovieInfo__info MovieInfo__info--similars\">\r\n          {Object.keys(movies).length === 0 && <Spinner/>}\r\n          {Object.keys(movies).length !== 0 && movies.total_results !== 0 &&\r\n            <div className=\"MovieInfo__similar-wrapper\">\r\n              {this.props.makeList(\"similars\")}\r\n            </div>\r\n          }\r\n          {Object.keys(movies).length !== 0 && movies.total_results === 0 &&\r\n            <div className=\"MovieInfo__info MovieInfo__info--na MovieInfo__info--na-similars\">Not available</div>\r\n          }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    movieSimilars: state.movieSimilars\r\n  }\r\n};\r\nconst mapDispatchToProps = {\r\n  fetchMovieSimilars\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WithMovieList(SimilarMovies));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchMovieCredits } from '../../Redux/actions/movie_info/fetch_movie_credits';\r\nimport ShowLink from '../../Components/ShowLink';\r\nimport Spinner from '../../Components/Spinner';\r\n\r\nconst castToShowPreview = 8;\r\n\r\nclass CastPreview extends Component {\r\n  state = {\r\n    isLoaded: false\r\n  }\r\n  loadCast() {\r\n    let cast = this.props.movieCredits.cast;\r\n    if (this.props.type === 'crew') {\r\n      cast = this.props.movieCredits.crew.filter(person =>\r\n        person.job === \"Director\"\r\n      );\r\n    }\r\n    if (cast.length === 0) {\r\n      return(\r\n        <div className=\"MovieInfo__info MovieInfo__info--na\">Not available</div>\r\n      );\r\n    } else {\r\n      cast = cast.filter((_, i) => i < castToShowPreview);\r\n      return cast.map((person, index) =>\r\n        <div className=\"MovieInfo__person\" key={person.id}>\r\n          <span className=\"MovieInfo__person-name\">{person.name}</span>\r\n          <span className=\"MovieInfo__person-character\">{this.props.type === 'cast' ? person.character : person.job}</span>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.props.fetchMovieCredits(this.props.id);\r\n  }\r\n  render(){\r\n    const isLoaded = !!Object.keys(this.props.movieCredits).length;\r\n    const type = this.props.type;\r\n    return(\r\n      <>\r\n        <h2 className=\"MovieInfo__section-header\">{type}</h2>\r\n        <div className=\"MovieInfo__info MovieInfo__info--credits\">\r\n          {isLoaded && this.props.movieCredits[type].length !== 0 &&\r\n            <ShowLink id={this.props.id} type={type}/>\r\n          }\r\n          {!isLoaded && <Spinner/>}\r\n          {isLoaded && this.loadCast()}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    movieCredits: state.movieCredits,\r\n  }\r\n};\r\nconst mapDispatchToProps = {\r\n  fetchMovieCredits\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CastPreview);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../Redux/actions/movie_info/fetch_movie_details';\nimport { fetchMovieSimilars } from '../../Redux/actions/movie_info/fetch_movie_similars';\nimport GalleryPreview from './GalleryPreview';\nimport ImageShow from '../ImageShow';\nimport Poster from './Poster';\nimport Article from '../../Components/Article';\nimport SimilarMovies from './SimilarMovies';\nimport CastPreview from './CastPreview';\nimport Spinner from '../../Components/Spinner';\n\nclass MovieInfo extends Component {\n  componentDidMount() {\n    this.props.fetchMovieDetails(this.props.id);\n  }\n  componentDidUpdate(prewProps) {\n    if (this.props.id !== prewProps.id) {\n      if (!this.props.isError) {\n        this.props.fetchMovieDetails(this.props.id);\n      }\n    }\n  }\n  render() {\n    const {\n      title, vote_average, poster_path, release_date,\n      id, original_title, tagline, overview, budget,\n      genres, vote_count, popularity, original_language\n    } = this.props.movieDetails;\n    const { settings, query, loading } = this.props;\n    const na = <i>Not available</i>;\n    return(\n      <div className=\"App__content\">\n        <div className=\"container container--movieinfo\">\n          {loading && <Spinner/>}\n          {!loading && Object.keys(this.props.movieDetails).length !== 0 &&\n            <div className=\"MovieInfo__wrapper\">\n              {Object.keys(query).length !== 0 &&\n                <ImageShow\n                  settings={settings}\n                  imageIndex={query.image - 1} from=\"movie\"\n                />\n              }\n              <h1 className=\"MovieInfo__title\">\n                <span>{title}</span>\n              </h1>\n              <div className=\"MovieInfo__main\">\n                <div className=\"MovieInfo__left-column\">\n                  <Poster vote_average={vote_average}\n                    settings={settings.images} poster_path={poster_path}\n                    id={id} title={title}\n                  />\n                </div>\n                <div className=\"MovieInfo__right-column\">\n                  <GalleryPreview settings={settings.images} id={id}/>\n                  <Article title=\"original title\"> {`${original_title} (${original_language})`} </Article>\n                  <Article title=\"tagline\">{tagline.length ? `\"${tagline}\"` : na}</Article>\n                  <Article title=\"description\">{overview.length ? overview : na}</Article>\n                  <Article title=\"release date\">{release_date ? release_date : na}</Article>\n                  <h2 className=\"MovieInfo__section-header\">genres</h2>\n                  <div className=\"MovieInfo__info MovieInfo__info--row\">\n                    {genres.length > 0 && genres.map((genre, index) =>\n                      <Link\n                        key={index} className=\"MovieInfo__genre-href\"\n                        to={`/sort_by?genres=${genre.id}`}\n                      > {genre.name}\n                      </Link>\n                    )}\n                    {genres.length === 0 && na}\n                  </div>\n                  <Article title=\"budget\">{`${budget} $`}</Article>\n                  <h2 className=\"MovieInfo__section-header\">credits</h2>\n                  <CastPreview type=\"crew\" id={id}/>\n                  <CastPreview type=\"cast\" id={id}/>\n                  <div className=\"MovieInfo__votes\">\n                    <div className=\"MovieInfo__vote-wrapper\">\n                      <h2 className=\"MovieInfo__section-header\">average vote:</h2>\n                      <span className=\"MovieInfo__number\">{vote_average}</span>\n                    </div>\n                    <div className=\"MovieInfo__vote-wrapper\">\n                      <h2 className=\"MovieInfo__section-header\">number of votes:</h2>\n                      <span className=\"MovieInfo__number\">{vote_count}</span>\n                    </div>\n                    <div className=\"MovieInfo__vote-wrapper\">\n                      <h2 className=\"MovieInfo__section-header\">popularity:</h2>\n                      <span className=\"MovieInfo__number\">{popularity}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <SimilarMovies id={id} settings={settings}/>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    movieDetails: state.movieDetails,\n    loading: state.loading\n  }\n};\nconst mapDispatchToProps = {\n  fetchMovieDetails,\n  fetchMovieSimilars\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchMovieImages } from '../Redux/actions/movie_info/fetch_movie_images';\nimport Spinner from '../Components/Spinner';\nimport ImageShow from './ImageShow';\n\nclass Gallery extends Component {\n  makeAddress(n, path) {\n    return this.props.settings.images.secure_base_url + this.props.settings.images.poster_sizes[n] + path;\n  }\n  loadImages() {\n    let images = this.props.movieImages.backdrops;\n    return images.map((image, index) => {\n      return(\n        <Link className=\"Gallery__image\" key={index} to={`/filmId/${this.props.id}/gallery?image=${index+1}`}>\n          <picture>\n            <source srcSet={this.makeAddress(3, image.file_path)} media=\"(min-width: 1300px)\" />\n            <source srcSet={this.makeAddress(2, image.file_path)} media=\"(min-width: 800px)\" />\n            <img src={this.makeAddress(1, image.file_path)} alt=\"movie-poster\"/>\n          </picture>\n        </Link>\n      );\n    });\n  }\n  componentDidMount() {\n    if (!Object.keys(this.props.movieImages).length) {\n      this.props.fetchMovieImages(this.props.id);\n    }\n  }\n  render() {\n    const { query, movieImages, settings } = this.props;\n    return(\n      <div className=\"Gallery\">\n        {Object.keys(query).length !== 0 &&\n          <ImageShow\n            imageIndex={query.image - 1}\n            settings={settings}\n            from=\"gallery\"\n          />\n        }\n        <div className=\"container container--gallery\">\n          {!Object.keys(movieImages).length && <Spinner/>}\n          {Object.keys(movieImages).length && this.loadImages()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    movieImages: state.movieImages\n  }\n};\nconst mapDispatchToProps = {\n  fetchMovieImages\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Gallery);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMovieCredits } from '../Redux/actions/movie_info/fetch_movie_credits';\n\nclass Cast extends Component {\n  loadCast() {\n    let cast = this.props.movieCredits.cast;\n    if (this.props.type === 'crew') {\n      cast = this.props.movieCredits.crew;\n    }\n    return cast.map((person, index) =>\n      <li className=\"MovieInfo__person\" key={index}>\n        <span className=\"MovieInfo__person-name\">{person.name}</span>\n        <span className=\"MovieInfo__person-character\">{\n          this.props.type === 'cast' ? person.character : person.job\n        }</span>\n      </li>\n    );\n  }\n  componentDidMount() {\n    if (!Object.keys(this.props.movieCredits).length) {\n      this.props.fetchMovieCredits(this.props.id);\n    }\n  }\n  render() {\n    return(\n      <div className=\"container container--movieinfo\">\n        <ul className=\"App__credits\">\n          {Object.keys(this.props.movieCredits).length !== 0 && this.loadCast()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    movieCredits: state.movieCredits\n  }\n};\n\nconst mapDispatchToProps = {\n  fetchMovieCredits\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cast);\n","import React from 'react';\r\n\r\nconst ErrorPage = () =>\r\n  <div className=\"container container--error-page\">\r\n    <h1 className=\"App__error-header\">ERROR! :(</h1>\r\n    <div className=\"App__error-text\">\r\n      <span>Page not found.</span>\r\n      <a className=\"App__error-link\" href=\"/Moviesearcher/\">Home</a>\r\n    </div>\r\n  </div>\r\n\r\nexport default ErrorPage;\r\n","import React, { Component } from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport { fetchSettings } from '../Redux/actions/fetch_settings';\nimport { connect } from 'react-redux';\nimport '../css/style.css';\nimport Header from '../Components/Header/Header';\nimport HeaderMovie from '../Components/Header/HeaderMovie';\nimport HeaderMovieDetails from '../Components/Header/HeaderMovieDetails';\nimport HeaderFavorites from '../Components/Header/HeaderFavorites';\nimport MovieList from './MovieList/MovieList';\nimport MovieListSorted from './MovieList/MovieListSorted';\nimport MovieListSearched from './MovieList/MovieListSearched';\nimport MovieListFavorites from './MovieList/MovieListFavorites';\nimport MovieInfo from './MovieInfo/MovieInfo';\nimport Gallery from './Gallery';\nimport Cast from './Cast';\nimport ErrorPage from '../Components/ErrorPage';\n\nconst queryString = require('query-string');\n\nclass App extends Component {\n  getSettings() {\n    this.props.fetchSettings(\n      document.cookie ?\n        JSON.parse(document.cookie.split(';')[0].split(' ')[0].split('settings=')[1]) :\n        undefined\n      );\n  }\n  makeQueryAndPage(searchQuery){\n    return {\n      query: searchQuery.split('/')[1] ? queryString.parse(searchQuery.split('/')[0]) : queryString.parse(searchQuery),\n      page: searchQuery.split('/')[1] ? +searchQuery.split('/')[1] : 1\n    }\n  }\n  componentDidMount() {\n    this.getSettings();\n  }\n  render() {\n    const settings = this.props.settings;\n    return (\n      <div className=\"App\">\n        {Object.keys(settings).length !== 0 &&\n          <Switch>\n            <Route exact path='/' render={() =>\n              <>\n                <Header/>\n                <MovieList page={1} settings={settings}/>\n              </>\n            }/>\n            <Route path='/sort_by' render={props =>\n              <>\n                <Header query={this.makeQueryAndPage(props.location.search).query}/>\n                <MovieListSorted\n                  query={this.makeQueryAndPage(props.location.search).query}\n                  page={this.makeQueryAndPage(props.location.search).page}\n                  settings={settings}\n                />\n              </>\n            }/>\n            <Route path='/search' render={props =>\n              <>\n                <Header query={this.makeQueryAndPage(props.location.search).query}/>\n                <MovieListSearched\n                  query={this.makeQueryAndPage(props.location.search).query}\n                  page={this.makeQueryAndPage(props.location.search).page}\n                  settings={settings}\n                />\n              </>\n            }/>\n            <Route path='/filmId/:id/gallery' render={props =>\n              <>\n                <HeaderMovieDetails id={+props.match.params.id}/>\n                <Gallery\n                  id={+props.match.params.id}\n                  query={this.makeQueryAndPage(props.location.search).query}\n                  settings={settings}\n                />\n              </>\n            }/>\n            <Route path='/filmId/:id/(cast|crew)' render={props =>\n              <>\n                <HeaderMovieDetails id={+props.match.params.id}/>\n                <Cast id={+props.match.params.id} type={props.match.params[0]}/>\n              </>\n            }/>\n            <Route path='/filmId/:id' render={props =>\n              <>\n                <HeaderMovie/>\n                <MovieInfo\n                  id={+props.match.params.id}\n                  query={this.makeQueryAndPage(props.location.search).query}\n                  settings={settings}\n                />\n              </>\n            }/>\n            <Route path='/favorites' render={() =>\n              <>\n                <HeaderFavorites/>\n                <MovieListFavorites settings={settings}/>\n              </>\n            }/>\n            <Route path='/:page(\\d+)' render={props =>\n              <>\n                <Header/>\n                <MovieList page={+props.match.params.page} settings={settings}/>\n              </>\n            }/>\n            <Route component={ErrorPage}/>\n          </Switch>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    settings: state.settings\n  }\n};\n\nconst mapDispatchToProps = {\n  fetchSettings\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  errorClear\n} from '../Redux/actions/has_error';\n\n\nclass ErrorHandler extends Component {\n  render() {\n    if (this.props.error.isError) {\n      return(\n        <div className=\"App\">\n          <div className=\"container container--error-page\">\n            <h1 className=\"App__error-header\">ERROR! :(</h1>\n            <div className=\"App__error-text\">\n              <span>{this.props.error.errorText}</span>\n              <a className=\"App__error-link\" href=\"/Moviesearcher/\">Home</a>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return(\n      this.props.children\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.error\n  }\n};\n\nconst mapDispatchToProps = {\n  errorClear\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorHandler);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport setStore from './Redux/store';\nimport App from './Containers/App';\nimport ErrorHandler from './Containers/ErrorHandler';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst store = setStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorHandler>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App/>\n      </BrowserRouter>\n    </ErrorHandler>\n  </Provider>,\n  document.getElementById('root')\n);","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport default function setStore() {\n  return createStore(\n    rootReducer,\n    composeWithDevTools(\n      applyMiddleware(thunk)\n    )\n  );\n}"],"sourceRoot":""}